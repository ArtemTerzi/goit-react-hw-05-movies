{"version":3,"file":"static/js/379.4c54dee8.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBK,EADwB,yBAMvBA,EAASC,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAM,CAC9CN,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtDN,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAMhBA,EAASC,KAAKK,MANE,2CAAH,sDASTC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtDN,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZM,EAAkB,mCAAG,WAAMC,GAAN,uFACTb,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTc,MAAAA,KAJ4B,cAC1BT,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,qD,8HCvClBQ,E,OAAWC,EAAAA,GAAH,mE,SCArB,ECG2B,WACzB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,MAAmBqB,MAAK,SAAAlB,GAAQ,OAAIc,EAAUd,EAAd,GACjC,GAAE,KAGD,+BACE,wBACGa,EAAOM,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAP,OACV,SAACV,EAAD,WACE,SAAC,KAAD,CAAMW,GAAE,iBAAYjB,GAAMkB,MAAO,CAAEC,KAAMR,GAAzC,SACGK,KAFUhB,EADL,OAUnB,ECfD,EATiB,WACf,OACE,6BACE,4CACA,SAAC,EAAD,MAGL,C","sources":["helpers/FetchAPI.jsx","components/TrendingMoviesList/TrendingMoviesList.styled.jsx","components/TrendingMoviesList/index.js","components/TrendingMoviesList/TrendingMoviesList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c706b9e49acca8149f8445498f846084';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n","import TrendingMoviesList from './TrendingMoviesList';\n\nexport default TrendingMoviesList;\n","import { fetchTrendMovies } from 'helpers/FetchAPI';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ListItem } from './TrendingMoviesList.styled';\n\nconst TrendingMoviesList = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendMovies().then(response => setMovies(response));\n  }, []);\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <ListItem key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TrendingMoviesList;\n","import TrendingMoviesList from 'components/TrendingMoviesList';\n\nconst HomePage = () => {\n  return (\n    <main>\n      <h2>Trending Today</h2>\n      <TrendingMoviesList />\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","ListItem","styled","useState","movies","setMovies","location","useLocation","useEffect","then","map","title","to","state","from"],"sourceRoot":""}