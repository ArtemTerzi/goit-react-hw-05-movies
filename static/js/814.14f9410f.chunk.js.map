{"version":3,"file":"static/js/814.14f9410f.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBK,EADwB,yBAMvBA,EAASC,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAM,CAC9CN,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtDN,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAMhBA,EAASC,KAAKK,MANE,2CAAH,sDASTC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtDN,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZM,EAAkB,mCAAG,WAAMC,GAAN,uFACTb,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTc,MAAAA,KAJ4B,cAC1BT,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,qD,sKCvClBQ,EAAQC,EAAAA,EAAAA,MAAH,0KAYLC,EAASD,EAAAA,EAAAA,OAAH,yKAYNE,EAAWF,EAAAA,EAAAA,GAAH,mE,SC6BrB,EAlDkB,WAAO,IAAD,EACtB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXZ,EAAK,UAAGS,EAAaI,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,qGAC0Bf,EAAAA,EAAAA,IAAmBC,GAD7C,OACQe,EADR,OAEER,EAAUQ,GAFZ,4CAHc,sBACA,KAAVf,GADU,mCAQdgB,EAED,GAAE,IAeH,OACE,iCACE,kBAAMC,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMnB,EAAQkB,EAAEE,OAAOC,SAASrB,MAAMsB,MACtCZ,EAAgB,SAAD,OAAUV,KACzBD,EAAAA,EAAAA,IAAmBC,GAAOuB,KAAKhB,GAAWiB,MAAMC,QAAQC,MACzD,EAUG,WACE,SAACzB,EAAD,CAAO0B,KAAK,QAAQC,KAAK,OAAON,MAAOtB,EAAO6B,SAT/B,SAAAX,GACnB,IAAMlB,EAAQkB,EAAEE,OAAOE,MAEvBZ,EAD8B,KAAVV,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEjD,KAMK,SAACG,EAAD,CAAQyB,KAAK,SAAb,wBAEF,wBACGtB,EAAOwB,KAAI,gBAAGnC,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,MAAP,OACV,SAAC3B,EAAD,WACE,SAAC,KAAD,CAAM4B,GAAE,UAAKrC,GAAMsC,MAAO,CAAEC,KAAMvB,GAAlC,SACGoB,KAFUpC,EADL,QAUnB,ECnDD,ICQA,EARmB,WACjB,OACE,2BACE,SAAC,EAAD,KAGL,C","sources":["helpers/FetchAPI.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/SearchBar/index.js","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c706b9e49acca8149f8445498f846084';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  padding: 4px;\n  width: 400px;\n  border-radius: 8px;\n  font-size: 16px;\n\n  &:focus {\n    background-color: coral;\n    color: white;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 16px;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: coral;\n  }\n`;\n\nexport const ListItem = styled.li`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n","import { fetchMoviesByQuery } from 'helpers/FetchAPI';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, Input, ListItem } from './SearchBar.styled';\n\nconst SearchBar = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n\n    async function fetchMovieList() {\n      const movieList = await fetchMoviesByQuery(query);\n      setMovies(movieList);\n    }\n\n    fetchMovieList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    setSearchParams(`query=${query}`);\n    fetchMoviesByQuery(query).then(setMovies).catch(console.error);\n  };\n\n  const handleChange = e => {\n    const query = e.target.value;\n    const queryParams = query !== '' ? { query } : {};\n    setSearchParams(queryParams);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input name=\"query\" type=\"text\" value={query} onChange={handleChange} />\n        <Button type=\"sumbit\">Search</Button>\n      </form>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <ListItem key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import SearchBar from './SearchBar';\n\nexport default SearchBar;\n","import SearchBar from 'components/SearchBar';\n\nconst MoviesPage = () => {\n  return (\n    <main>\n      <SearchBar />\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","Input","styled","Button","ListItem","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","get","useEffect","movieList","fetchMovieList","onSubmit","e","preventDefault","target","elements","value","then","catch","console","error","name","type","onChange","map","title","to","state","from"],"sourceRoot":""}